[{"C:\\Users\\Marulina\\OneDrive\\Desktop\\Router\\routerapp\\src\\index.js":"1","C:\\Users\\Marulina\\OneDrive\\Desktop\\Router\\routerapp\\src\\App.js":"2","C:\\Users\\Marulina\\OneDrive\\Desktop\\Router\\routerapp\\src\\AddMovie.js":"3","C:\\Users\\Marulina\\OneDrive\\Desktop\\Router\\routerapp\\src\\Filter\\Filter.js":"4","C:\\Users\\Marulina\\OneDrive\\Desktop\\Router\\routerapp\\src\\MovieCard\\MovieList.js":"5","C:\\Users\\Marulina\\OneDrive\\Desktop\\Router\\routerapp\\src\\MovieCard\\MovieCard.js":"6","C:\\Users\\Marulina\\OneDrive\\Desktop\\Router\\routerapp\\src\\MovieDetails.js":"7"},{"size":242,"mtime":1607270856782,"results":"8","hashOfConfig":"9"},{"size":30378,"mtime":1607271835170,"results":"10","hashOfConfig":"9"},{"size":4028,"mtime":1607271116585,"results":"11","hashOfConfig":"9"},{"size":1122,"mtime":1606993010244,"results":"12","hashOfConfig":"9"},{"size":680,"mtime":1606993022125,"results":"13","hashOfConfig":"9"},{"size":1188,"mtime":1607271540171,"results":"14","hashOfConfig":"9"},{"size":1433,"mtime":1607270921900,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"ej7iss",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"C:\\Users\\Marulina\\OneDrive\\Desktop\\Router\\routerapp\\src\\index.js",[],["33","34"],"C:\\Users\\Marulina\\OneDrive\\Desktop\\Router\\routerapp\\src\\App.js",["35"],"C:\\Users\\Marulina\\OneDrive\\Desktop\\Router\\routerapp\\src\\AddMovie.js",["36"],"import React, { useState } from \"react\";\r\nimport bootstrap from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst AddMovie = ({ modification }) => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const [newModif, setNewModif] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    posterURl: \"\",\r\n    rate: {\r\n      size: 50,\r\n      count: 5,\r\n      value: 0,\r\n      edit: false,\r\n    },\r\n  });\r\n\r\n  const handleSubmit = () => {\r\n    if (typeControle(newModif.posterURl)) {\r\n      modification(newModif);\r\n      setNewModif({\r\n        title: \"\",\r\n        description: \"\",\r\n        posterURl: \"\",\r\n        rate: {\r\n          size: 30,\r\n          count: 5,\r\n          value: 0,\r\n          edit: false,\r\n        },\r\n      });\r\n      handleClose();\r\n    } else {\r\n      alert(\"\" + newModif.posterURl + \"is not a link\");\r\n    }\r\n  };\r\n\r\n  const typeControle = (str) =>\r\n    str.startsWith(\"https\") || str.startsWith(\"http\") ? true : false;\r\n\r\n  return (\r\n    <div className=\"modal2\" id=\"Add\">\r\n      <Button variant=\"primary\" onClick={handleShow}>\r\n        Add a new movie\r\n      </Button>\r\n      <Modal className=\"modal3\" show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add properties here</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <form className=\"form\">\r\n            <div className=\"position\">\r\n              <label> Title : </label>\r\n              <input\r\n                type=\"Text\"\r\n                placeholder=\"Title\"\r\n                value={newModif.title}\r\n                onChange={(e) => {\r\n                  setNewModif({ ...newModif, title: e.target.value });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"position\">\r\n              <label className=\"formdescription\"> Description : </label>\r\n              <input\r\n                className=\"inputdesc\"\r\n                type=\"tText\"\r\n                placeholder=\"Add a description\"\r\n                value={newModif.description}\r\n                onChange={(e) => {\r\n                  setNewModif({ ...newModif, description: e.target.value });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"position\">\r\n              <label className=\"formposter\"> PosterURL :</label>\r\n              <input\r\n                className=\"inputposter\"\r\n                type=\"Text\"\r\n                placeholder=\"Add posterUrl\"\r\n                value={newModif.posterURL}\r\n                onChange={(e) => {\r\n                  setNewModif({ ...newModif, posterURl: e.target.value });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"position\">\r\n              <label className=\"formrate\"> Rate :</label>\r\n              <select\r\n                className=\"select\"\r\n                value={newModif.rate.value}\r\n                onChange={(e) => {\r\n                  setNewModif({\r\n                    ...newModif,\r\n                    rate: {\r\n                      size: 30,\r\n                      count: 5,\r\n                      value: +e.target.value,\r\n                      edit: false,\r\n                    },\r\n                  });\r\n                }}\r\n              >\r\n                <option value=\"0\">0</option>\r\n                <option value=\"1\">1</option>\r\n                <option value=\"2\">2</option>\r\n                <option value=\"3\">3</option>\r\n                <option value=\"4\">4</option>\r\n                <option value=\"5\">5</option>\r\n              </select>\r\n            </div>\r\n          </form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleSubmit}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default AddMovie;\r\n","C:\\Users\\Marulina\\OneDrive\\Desktop\\Router\\routerapp\\src\\Filter\\Filter.js",[],"C:\\Users\\Marulina\\OneDrive\\Desktop\\Router\\routerapp\\src\\MovieCard\\MovieList.js",[],"C:\\Users\\Marulina\\OneDrive\\Desktop\\Router\\routerapp\\src\\MovieCard\\MovieCard.js",[],"C:\\Users\\Marulina\\OneDrive\\Desktop\\Router\\routerapp\\src\\MovieDetails.js",["37","38"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MovieDetails = ({ match, data }) => {\r\n  console.log(\"data : \", data);\r\n  const [movie, setMovie] = useState({});\r\n  console.log(\" match : \", match);\r\n  useEffect(() => {\r\n    setMovie(data.find((el) => el.title === match.params.title));\r\n  }, [match.params.title]);\r\n  return movie ? (\r\n    <div\r\n      style={{\r\n        paddingLeft: \"30%\",\r\n        paddingTop: \"5%\",\r\n      }}\r\n    >\r\n      <div className=\"CardDetails\">\r\n        <div className=\"Carddesc\">\r\n          <h1 className=\"title\" style={{ color: \"pink\" }}>\r\n            {\" \"}\r\n            {movie.title}{\" \"}\r\n          </h1>\r\n          <h3 className=\"text\" style={{ color: \"white\" }}>\r\n            {\" \"}\r\n            {movie.description}\r\n          </h3>\r\n          <h3 style={{ color: \"pink\" }}> Movie Trailer </h3>\r\n          <iframe\r\n            width=\"465\"\r\n            height=\"250\"\r\n            src={movie.trailerlink}\r\n            frameborder=\"0\"\r\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowfullscreen\r\n          ></iframe>\r\n        </div>\r\n      </div>\r\n      <Link to=\"/\">\r\n        <h4 style={{ marginRight: \"45%\", marginTop: \"4%\" }}>\r\n          Return to main page\r\n        </h4>\r\n      </Link>\r\n    </div>\r\n  ) : (\r\n    <div></div>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":105,"column":9,"nodeType":"45","messageId":"46","endLine":105,"endColumn":20},{"ruleId":"43","severity":1,"message":"47","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":17},{"ruleId":"48","severity":1,"message":"49","line":10,"column":6,"nodeType":"50","endLine":10,"endColumn":26,"suggestions":"51"},{"ruleId":"52","severity":1,"message":"53","line":29,"column":11,"nodeType":"54","endLine":36,"endColumn":12},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'handlemovie' is assigned a value but never used.","Identifier","unusedVar","'bootstrap' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array. If 'setMovie' needs the current value of 'data', you can also switch to useReducer instead of useState and read 'data' in the reducer.","ArrayExpression",["57"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},"Update the dependencies array to be: [data, match.params.title]",{"range":"60","text":"61"},[347,367],"[data, match.params.title]"]